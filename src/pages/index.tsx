import { type NextPage } from "next";
import Head from "next/head";
import { Navbar } from "~/components/Navbar";
import { Footer } from "~/components/Footer";
import { StudentInformation } from "~/components/StudentInformation";
import { MealSelection } from "~/components/MealSelection";
import { OrderConfirmation } from "~/components/OrderConfirmation";
import { Payment } from "~/components/Payment";
import { useStepStore } from "../state/index";
import { Final } from "~/components/Final";

export const steps = [
  "Student Information",
  "Meal Selection",
  "Order Confirmation",
  "Payment",
  "Done",
];

const Home: NextPage = () => {
  // const [step, setStep] = useState(0);
  const { step } = useStepStore((state) => ({
    step: state.step,
    increment: state.increment,
    decrement: state.decrement,
  }));

  const PageSwitcher: React.FC<{ stepValue: number }> = ({ stepValue }) => {
    return (
      <>
        {stepValue === 0 ? (
          <StudentInformation />
        ) : stepValue === 1 ? (
          <MealSelection />
        ) : stepValue === 2 ? (
          <OrderConfirmation />
        ) : stepValue === 3 ? (
          <Payment />
        ) : stepValue === 4 ? (
          <Final />
        ) : (
          <h2>Nothing</h2>
        )}
      </>
    );
  };

  return (
    <>
      <Head>
        <title>Freshii Ottawa</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className="flex h-screen  flex-col items-center justify-center "
        data-theme={"autumn"}
      >
        <Navbar />

        {/* Stepper */}
        <div className="my-6 mx-auto">
          <div className="text-center sm:hidden">
            <p>Step {step}</p>
            <p>{steps[step]}</p>
          </div>

          <div className="hidden sm:block">
            <ul className="steps">
              {steps.map((each, idx) => (
                <li
                  key={idx}
                  className={`${step === idx ? "step-accent" : ""} step`}
                >
                  {each}
                </li>
              ))}
            </ul>
          </div>
        </div>
        {step === 1 && (
          <a
            href="https://www.freshii.com/"
            target="_blank"
            className="btn-success btn-sm btn sticky top-0 my-1 gap-2"
          >
            Curious about ingredients?
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#000000"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <g fill="none" fill-rule="evenodd">
                <path d="M18 14v5a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8c0-1.1.9-2 2-2h5M15 3h6v6M10 14L20.2 3.8" />
              </g>
            </svg>
          </a>
        )}

        <main className="relative flex-grow overflow-scroll">
          <PageSwitcher stepValue={step} />
        </main>

        <Footer />
      </div>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
