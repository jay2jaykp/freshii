import { type NextPage } from "next";
import Head from "next/head";
import { Navbar } from "~/components/Navbar";
import { Footer } from "~/components/Footer";
import { StudentInformation } from "~/components/StudentInformation";
import { MealSelection } from "~/components/MealSelection";
import { OrderConfirmation } from "~/components/OrderConfirmation";
import { Payment } from "~/components/Payment";
import { useStepStore } from "../state/index";
import { Final } from "~/components/Final";
import { useState } from "react";

export const steps = [
  "Student Information",
  "Meal Selection",
  "Order Confirmation",
  "Payment",
  "Done",
];

const Home: NextPage = () => {
  const { step } = useStepStore((state) => ({
    step: state.step,
    increment: state.increment,
    decrement: state.decrement,
  }));

  const PageSwitcher: React.FC<{ stepValue: number }> = ({ stepValue }) => {
    return (
      <>
        {stepValue === 0 ? (
          <StudentInformation />
        ) : stepValue === 1 ? (
          <MealSelection />
        ) : stepValue === 2 ? (
          <OrderConfirmation />
        ) : stepValue === 3 ? (
          <Payment />
        ) : stepValue === 4 ? (
          <Final />
        ) : (
          <h2>Nothing</h2>
        )}
      </>
    );
  };

  return (
    <>
      <Head>
        <title>Freshii Ottawa</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className="flex h-screen  flex-col items-center justify-center "
        data-theme={"autumn"}
      >
        <Navbar />

        {/* Stepper */}
        <div className="my-6 mx-auto">
          <div className="text-center sm:hidden">
            <p>Step {step}</p>
            <p>{steps[step]}</p>
          </div>

          <div className="hidden sm:block">
            <ul className="steps">
              {steps.map((each, idx) => (
                <li
                  key={idx}
                  className={`${step === idx ? "step-accent" : ""} step`}
                >
                  {each}
                </li>
              ))}
            </ul>
          </div>
        </div>
        {step === 1 && (
          <a
            href="https://www.freshii.com/"
            target="_blank"
            className="btn-success btn-sm btn sticky top-0 my-1 gap-2"
          >
            Curious about ingredients?
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#000000"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <g fill="none" fill-rule="evenodd">
                <path d="M18 14v5a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8c0-1.1.9-2 2-2h5M15 3h6v6M10 14L20.2 3.8" />
              </g>
            </svg>
          </a>
        )}

        <main className="relative flex-grow overflow-scroll">
          <PageSwitcher stepValue={step} />
        </main>

        <div className="absolute bottom-24 right-4 text-right">
          {/* The button to open modal */}
          <label htmlFor="my-modal" className="btn rounded-full">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              fill="currentColor"
              className="bi bi-patch-question"
              viewBox="0 0 16 16"
            >
              <path d="M8.05 9.6c.336 0 .504-.24.554-.627.04-.534.198-.815.847-1.26.673-.475 1.049-1.09 1.049-1.986 0-1.325-.92-2.227-2.262-2.227-1.02 0-1.792.492-2.1 1.29A1.71 1.71 0 0 0 6 5.48c0 .393.203.64.545.64.272 0 .455-.147.564-.51.158-.592.525-.915 1.074-.915.61 0 1.03.446 1.03 1.084 0 .563-.208.885-.822 1.325-.619.433-.926.914-.926 1.64v.111c0 .428.208.745.585.745z" />
              <path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z" />
              <path d="M7.001 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0z" />
            </svg>
          </label>
        </div>
        <Footer />
      </div>

      {/* Put this part before </body> tag */}
      <input type="checkbox" id="my-modal" className="modal-toggle" />
      <div className="modal">
        <div className="modal-box relative">
          <label
            htmlFor="my-modal"
            className="btn-sm btn-circle btn absolute right-2 top-2"
          >
            âœ•
          </label>
          <h3 className="text-lg font-bold">
            Welcome to Freshii Kanata North Order Portal
          </h3>
          <p className="py-4">
            If you have any question or concern about the content of this
            website, please reach out to us our email{" "}
            <a
              className="inline-block"
              href="mailto:freshiikanatanorth@gmail.com"
            >
              freshiikanatanorth@gmail.com
            </a>
          </p>
        </div>
      </div>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
